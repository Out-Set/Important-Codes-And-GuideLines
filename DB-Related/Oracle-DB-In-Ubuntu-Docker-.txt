Setup Oracle DB in Docker
-------------------------

1. $ mkdir Docker

2. $ cd Docker

3. $ git clone https://github.com/oracle/docker-images.git

4. $ cd docker-images/OracleDatabase/SingleInstance/dockerfiles/19.3.0/

5. Now download Oracle 19.3 LINUX.X64_193000_db_home.zip and copy this zip file into 19.3.0 folder

6. Now come to the dir dockerfiles, and Build/Create Image
  ---------------------------------------------------------
   Run the command: $ ./buildContainerImage.sh -v 19.3.0 -e
    i.e.
     /Docker/docker-images/OracleDatabase/SingleInstance/dockerfiles$ ./buildContainerImage.sh -v 19.3.0 -e

7. $ docker volume create oracle-db //created volume named 'oracle-db'

8. Create Container
   $ docker run -d --name <name> -p 1521:1521 -p 5500:5500 -e ORACLE_SID=ORCLDB -e ORACLE_PDB=ORCLPDB1 -e ORACLE_PWD=<password> -v <volume>:/opt/oracle/ordata <image-name>:tag<>
   $ docker run -d --name oracledb -p 1521:1521 -p 5500:5500 -e ORACLE_SID=ORCLCDB -e ORACLE_PDB=ORCLPDB1 -e ORACLE_PWD=12345 -v oracle-db:/opt/oracle/ordata oracle/database:19.3.0-ee
   
# Create Oracle-Container: Another example
------------------------------------------
docker run -d --name oracleDb \
-p 1521:1521 -p 5500:5500 \
-e ORACLE_SID=ORCLDB \
-e ORACLE_PDB=ORCLPDB1 \
-e ORACLE_PWD=Db@12345$ \
-v oracle-db:/opt/oracle/oradata \
oracle/database:19.3.0-ee


9. $ docker logs -f <some part of the displayed code> 
     i.e. 
     $ docker logs -f 7200b294038920
  
10. $ docker images // To see all the created images

11. $ docker ps -a // To see all the existing containers (running or not running both)

12. $ docker ps // To see all the running containers

13. Connecting to the Database from Within the Container:
------------------------------------------------------

$ docker exec -it dbname sqlplus / as sysdba

$ docker exec -it dbname sqlplus sys/cdb-user-password@cdb-sid as sysdba

$ docker exec -it dbname sqlplus system/cdb-user-password@cdb-sid

$ docker exec -it dbname sqlplus pdbadmin/pdb-user-password@pdbname

==============================================================================================================================================================================================


Oracle SQL-Developer in VS-Code:
---------------------------------
Vs-Code - Oracle SQL Developer Extension for VSCode


Setup SQL-Developer in Ubuntu
-------------------------------

1. Download JDK-11, as it is required to run SQL-Developer.
   Run this command in the terminal: $ sudo apt-get install openjdk-11-jdk
   
2. Choose JDK-11 as default JDK if multiple JDKs are installed in your system
   Run this command in the terminal and choose JDK-11: $ sudo update-alternatives --config java

3. Download SQL-Developer from orcle by choosing Other Platforms.
   Extract it and open go into the sqldeveloper dir then run the script: $ ./sqldeveloper.sh
   
   
Note: Run the following command, if you see this error: Gtk-Message: 16:40:04.973: Failed to load module "canberra-gtk-module"
      $ sudo apt install libcanberra-gtk-module libcanberra-gtk3-module
   
   Although it is not necessary, you can ignore this error. Your SQL-Developer will still perform normally.
   
=================================================================================================================

 

How to use this Oracle image, with SQL-Developer
-------------------------------------------------

1. $ docker ps -a // Containers you have available

2. $ docker start <Container-Name> // To start the container (stattus will be changed from starting to healthy, when started)
    After the use, always stop the container: $ docker stop <Container-Name>
    
    To see the status: $ docker ps
    
3. Run the SQL-Developer script
   $ ./sqldeveloper.sh

==========================================================================================================================================

Congratulations, you have done it.



